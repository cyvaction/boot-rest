buildscript {
    ext {
        // Versions
        // ========
        springBootVersion  = '1.2.3.RELEASE'
        asciidoctorVersion = '1.5.2'
    }
    repositories { jcenter() }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:$asciidoctorVersion"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'org.asciidoctor.gradle.asciidoctor'

ext {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // Versions
    // ========
    springDataEsVersion = '1.2.0.RELEASE'
    jerseyVersion       = '2.14'
    metricsVersion      = '3.1.0'
    guavaVersion        = '18.0'
    lombokVersion       = '1.16.2'
    swaggerVersion      = '1.3.12'
    festAssertVersion   = '1.4'
}

jar {
    doFirst {
        manifest {
            attributes 'Implementation-Title': project.name, 'Implementation-Version': version
        }
    }
    baseName = 'boot-rest'
    archiveName = "${baseName}.jar"
    version = '0.1.0-SNAPSHOT'
}

asciidoctor {
    sourceDir = file('src/asciidoc')
    outputDir = file('docs')
}

repositories { jcenter() }

configurations { compile.exclude module: 'spring-boot-starter-tomcat' }

dependencies {
    // Core
    // ====
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile('org.springframework.boot:spring-boot-starter-jersey') { exclude module: 'jersey-media-multipart' }
    compile 'org.springframework.boot:spring-boot-starter-jetty'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile "org.springframework.data:spring-data-elasticsearch:$springDataEsVersion"

    // Extensions
    // ==========
    compile 'org.thymeleaf:thymeleaf-spring4'
    compile 'org.eclipse.jetty:jetty-servlets'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile "org.glassfish.jersey.media:jersey-media-multipart:$jerseyVersion"
    compile "org.glassfish.jersey.connectors:jersey-apache-connector:$jerseyVersion"
    compile "io.dropwizard.metrics:metrics-core:$metricsVersion"

    // Utilities
    // =========
    compile "com.google.guava:guava:$guavaVersion"
    compile "org.projectlombok:lombok:$lombokVersion"
    compile("com.wordnik:swagger-jersey2-jaxrs_2.10:$swaggerVersion") { exclude module: 'jsr311-api' }

    // Testing
    // =======
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.easytesting:fest-assert:$festAssertVersion"
}

// Tasks
// =====
task wrapper(type: Wrapper) { gradleVersion = '2.3' }

// Webapp
// ------
def webappDir = 'src/webapp'

task npmInstall(type: Exec) {
    workingDir webappDir
    commandLine 'npm', 'install'
}

task gulpBuild(type: Exec) {
    dependsOn npmInstall
    workingDir webappDir
    commandLine 'gulp'
}

task gulpWatch(type: Exec) {
    workingDir webappDir
    commandLine 'gulp', 'watch'
}

// Docs
// ----
def docsDir = 'src/main/resources/public/docs'

task makeDocsDir(type: Exec) {
    dependsOn asciidoctor
    workingDir projectDir
    commandLine 'mkdir', '-p', docsDir
}

task copyDocs(type: Copy) {
    dependsOn makeDocsDir
    from "${asciidoctor.outputDir}/html5/index.html"
    into docsDir
}

processResources.dependsOn copyDocs

// Dist
// ----
task copyDistJar(type: Copy) {
    from "build/libs/${jar.archiveName}"
    into "$projectDir/bin"
}

task dist(dependsOn: [gulpBuild, build, copyDistJar])

build.mustRunAfter gulpBuild

// Heroku
// ------
task stage(dependsOn: [classes, jar, assemble])
