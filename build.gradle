buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

ext {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

jar {
    baseName = 'boot-rest'
    archiveName = "${baseName}.jar"
    version = '0.1.0-SNAPSHOT'
}

repositories {
    mavenCentral()
}

// Versions
// ========
def springDataEsVersion = '1.2.0.RELEASE'
def jerseyVersion = '2.14'
def metricsVersion = '3.1.0'
def guavaVersion = '18.0'
def lombokVersion = '1.16.2'
def swaggerVersion = '1.3.12'
def festAssertVersion = '1.4'

configurations {
    compile.exclude module: 'spring-boot-starter-tomcat'
}

dependencies {
    // Core
    // ====
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-jersey'
    compile 'org.springframework.boot:spring-boot-starter-jetty'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile "org.springframework.data:spring-data-elasticsearch:$springDataEsVersion"

    // Extensions
    // ==========
    compile 'org.thymeleaf:thymeleaf-spring4'
    compile 'org.eclipse.jetty:jetty-servlets'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile "org.glassfish.jersey.connectors:jersey-apache-connector:$jerseyVersion"
    compile "io.dropwizard.metrics:metrics-core:$metricsVersion"

    // Utilities
    // =========
    compile "com.google.guava:guava:$guavaVersion"
    compile "org.projectlombok:lombok:$lombokVersion"
    compile "com.wordnik:swagger-jersey2-jaxrs_2.10:$swaggerVersion"

    // Testing
    // =======
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.easytesting:fest-assert:$festAssertVersion"
}

// Tasks
// =====
task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

def webappDevDir = 'src/main/webapp-dev'

task npmInstall(type: Exec) {
    workingDir webappDevDir
    commandLine 'npm', 'install'
}

task bowerInstall(type: Exec) {
    workingDir webappDevDir
    commandLine 'bower', 'install'
}

task gulpBuild(type: Exec) {
    workingDir webappDevDir
    commandLine 'gulp'
}

task gulpWatch(type: Exec) {
    workingDir webappDevDir
    commandLine 'gulp', 'watch'
}

task copyJar(type: Exec) {
    workingDir 'build/libs'
    commandLine 'cp', jar.archiveName, '../../bin'
}

bowerInstall.dependsOn npmInstall
gulpBuild.dependsOn bowerInstall
build.dependsOn gulpBuild

task dist(dependsOn: ['build', 'copyJar'])

// Used by Heroku
task stage(dependsOn: ['processResources', 'classes', 'jar', 'bootRepackage', 'assemble'])
